@inherits LayoutComponentBase
@inject IJSRuntime JS

<Navbar />
<main class="body-content container-fluid" id="main">
    @Body
</main>
<hr />
@{
    string author = "Martin Costello";
    string repository = GitMetadata.RepositoryUrl;
    string branch = repository + "/tree/" + GitMetadata.Branch;
    string build = repository + "/actions/runs/" + GitMetadata.BuildId;
    string commit = repository + "/commit/" + GitMetadata.Commit;
    string instance = Options.Value.GitHubInstance;
}
<footer>
    <div class="pb-3 row row-cols-auto justify-content-left">
        <div class="col">
            &copy; @(author) @(DateTime.UtcNow.Year)
        </div>
        <div class="col d-none d-lg-block">
            Powered by <a rel="noopener" href="https://github.com/martincostello/benchmarkdotnet-results-publisher">benchmarkdotnet-results-publisher</a>
            and @(System.Runtime.InteropServices.RuntimeInformation.FrameworkDescription) with ASP.NET Core Blazor WASM
            <img src="blazor.svg" class="blazor mb-1" aria-hidden="true" />
        </div>
        <div class="col d-none d-lg-block">
            Built from
            <a href="@(commit)" title="View commit @(GitMetadata.Commit) on @(instance)" target="_blank" rel="noopener">
                <code>@(GitMetadata.Commit[..7])</code>
            </a>
            on
            <a href="@(branch)" title="View branch @(GitMetadata.Branch) on on @(instance)" target="_blank" rel="noopener">
                <code>@(GitMetadata.Branch)</code>
            </a>
            @if (!string.IsNullOrWhiteSpace(GitMetadata.BuildId))
            {
                <text>
                    by
                    <a href="@(build)" title="View deployment on on @(instance)" target="_blank" rel="noopener">
                        GitHub
                    </a>
                </text>
            }
            <span class="ps-1" title="@(GitMetadata.Timestamp.ToString("u", CultureInfo.InvariantCulture))">@(GitMetadata.Timestamp.Humanize())</span>
        </div>
    </div>
</footer>

@code {
    protected async override Task OnAfterRenderAsync(bool firstRender)
        => await JS.InvokeVoidAsync("configureToolTips", []);
}
