@page "/token"

@inject GitHubDeviceTokenService TokenService
@inject IJSRuntime JS

@{
    var options = Options.Value;
    var tokenRequired = options.IsGitHubEnterprise;
}

<PageTitle>Configure @(options.GitHubInstance) Token - @(options.BrandName)</PageTitle>

<div class="row m-2 justify-content-center">
    <div class="col-12 col-md-8">
        <div class="card ">
            <div class="card-header">
                @(options.GitHubInstance) Token @(tokenRequired ? "Required" : string.Empty)
            </div>
            <div class="card-body">
                <p class="card-text">
                    @if (tokenRequired)
                    {
                        <text>
                            A @(options.GitHubInstance) access token is required to load the data for this dashboard.
                        </text>
                    }
                    else
                    {
                        <text>
                            A @(options.GitHubInstance) access token can be configured to load the data for this dashboard to help avoid rate limiting.
                        </text>
                    }
                </p>
                <p class="card-text">
                    @if (_deviceCode?.UserCode is { Length: > 0 } code)
                    {
                        <form>
                            <div class="mb-3">
                                <div class="input-group input-group-lg">
                                    <span class="input-group-text" id="inputGroup-sizing-default">Code</span>
                                    <input class="form-control font-monospace"
                                           id="user-code"
                                           label="The @(options.GitHubInstance) verification code"
                                           readonly
                                           type="text"
                                           value="@(code)"
                                           aria-describedby="user-code-help">
                                    <button class="btn btn-lg btn-secondary copy-button"
                                            data-clipboard-target="#user-code"
                                            title="Copy to clipboard"
                                            aria-label="Copy verification code to clipboard">
                                        <span class="far fa-clipboard"></span>
                                    </button>
                                </div>
                                <div class="form-text" id="user-code-help">
                                    Use this code to allow @(options.BrandName) to generate an access token.
                                </div>
                            </div>
                            @* TODO Add some sort of "please wait" message *@
                            <div class="mb-3">
                                <div class="d-grid gap-2">
                                    <a class="btn btn-lg btn-github @(_authorizing ? "disabled" : string.Empty)"
                                       href="@(_deviceCode?.VerificationUrl ?? "#")"
                                       role="button"
                                       target="_blank"
                                       rel="noopener"
                                       data-bs-toggle="tooltip"
                                       data-bs-title="Authorize @(options.BrandName) to access your @(options.GitHubInstance) account"
                                       @onclick="AuthorizeAsync">
                                        Authorize
                                        <Icon Name="@(Icons.Check)" />
                                        <Icon Name="@(Icons.GitHub)" />
                                        <Icon Name="@(Icons.Key)" />
                                        @if (_authorizing)
                                        {
                                            <span class="ps-1">
                                                <Spinner SpinnerType="@(SpinnerType.Border)" LoadingText="Authorizing..." />
                                            </span>
                                        }
                                    </a>
                                </div>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="d-flex justify-content-center">
                            <Spinner SpinnerType="@(SpinnerType.Border)" Large="true" LoadingText="Generating code..." />
                        </div>
                    }
                </p>
                @if (_deviceCode is not null && _authorizationFailed)
                {
                    @* TODO Make this look better *@
                    <p class="card-text" id="authorization-failed">
                        <div class="alert alert-warning" role="alert">
                            <h5 class="fw-bolder">
                                <span class="fa-stack">
                                    <Icon Name="@(Icons.Key)" Stacked="true" />
                                    <Icon Name="@(Icons.Ban)" Stacked="true" Color="danger" />
                                </span>
                                @(options.GitHubInstance) authorization failed
                            </h5>
                            <p>
                                Possible causes:
                                <ul class="fw-light">
                                    <li>You did not enter the code above within @(TimeSpan.FromSeconds(_deviceCode.ExpiresInSeconds).Minutes) minutes</li>
                                    <li>You cancelled the authorization process</li>
                                </ul>
                            </p>
                            <p>
                                <button class="btn btn-lg btn-primary" title="Refresh the code">
                                    Try again
                                    @* TODO Refresh the code and reset the UI *@
                                </button>
                            </p>
                        </div>
                    </p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private bool _authorizing;
    private bool _authorizationFailed;
    private GitHubDeviceCode? _deviceCode;

    protected override async Task OnInitializedAsync()
    {
        _deviceCode = await TokenService.GetDeviceCodeAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_deviceCode is not null)
        {
            await JS.InvokeVoidAsync("configureClipboard");
        }
    }

    private async Task AuthorizeAsync()
    {
        if (_deviceCode is null)
        {
            return;
        }

        _authorizing = true;

        StateHasChanged();

        if (await TokenService.WaitForAccessTokenAsync(_deviceCode))
        {
            // TODO Fix the navbar not updating the authentication state
            Navigation.NavigateTo(Routes.Home);
        }

        StateHasChanged();

        _authorizing = false;
        _authorizationFailed = true;
    }
}
